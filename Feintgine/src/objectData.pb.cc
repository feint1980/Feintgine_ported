// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objectData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "objectData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proc_Vec2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Vec2_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Vec3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Vec3_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Vec4_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Vec4_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_SpotLight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_SpotLight_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_ColiderBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_ColiderBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Sprite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Sprite_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_OwnSprite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_OwnSprite_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Object_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Object_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_LoadObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_LoadObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Brush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Brush_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Layer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Layer_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proc_Scene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proc_Scene_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_objectData_2eproto() {
  protobuf_AddDesc_objectData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "objectData.proto");
  GOOGLE_CHECK(file != NULL);
  Proc_Vec2_descriptor_ = file->message_type(0);
  static const int Proc_Vec2_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec2, valuex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec2, valuey_),
  };
  Proc_Vec2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Vec2_descriptor_,
      Proc_Vec2::default_instance_,
      Proc_Vec2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Vec2));
  Proc_Vec3_descriptor_ = file->message_type(1);
  static const int Proc_Vec3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec3, valuex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec3, valuey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec3, valuez_),
  };
  Proc_Vec3_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Vec3_descriptor_,
      Proc_Vec3::default_instance_,
      Proc_Vec3_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec3, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec3, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Vec3));
  Proc_Vec4_descriptor_ = file->message_type(2);
  static const int Proc_Vec4_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec4, valuex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec4, valuey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec4, valuez_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec4, valuew_),
  };
  Proc_Vec4_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Vec4_descriptor_,
      Proc_Vec4::default_instance_,
      Proc_Vec4_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec4, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Vec4, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Vec4));
  Proc_SpotLight_descriptor_ = file->message_type(3);
  static const int Proc_SpotLight_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_SpotLight, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_SpotLight, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_SpotLight, atenuation_),
  };
  Proc_SpotLight_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_SpotLight_descriptor_,
      Proc_SpotLight::default_instance_,
      Proc_SpotLight_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_SpotLight, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_SpotLight, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_SpotLight));
  Proc_ColiderBox_descriptor_ = file->message_type(4);
  static const int Proc_ColiderBox_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_ColiderBox, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_ColiderBox, dim_),
  };
  Proc_ColiderBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_ColiderBox_descriptor_,
      Proc_ColiderBox::default_instance_,
      Proc_ColiderBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_ColiderBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_ColiderBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_ColiderBox));
  Proc_Sprite_descriptor_ = file->message_type(5);
  static const int Proc_Sprite_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Sprite, texturepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Sprite, dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Sprite, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Sprite, packetname_),
  };
  Proc_Sprite_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Sprite_descriptor_,
      Proc_Sprite::default_instance_,
      Proc_Sprite_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Sprite, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Sprite, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Sprite));
  Proc_OwnSprite_descriptor_ = file->message_type(6);
  static const int Proc_OwnSprite_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, proc_sprite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, offsetpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, offsetscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, angle_),
  };
  Proc_OwnSprite_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_OwnSprite_descriptor_,
      Proc_OwnSprite::default_instance_,
      Proc_OwnSprite_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_OwnSprite, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_OwnSprite));
  Proc_Object_descriptor_ = file->message_type(7);
  static const int Proc_Object_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Object, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Object, proc_spritelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Object, lightlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Object, coliderlist_),
  };
  Proc_Object_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Object_descriptor_,
      Proc_Object::default_instance_,
      Proc_Object_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Object, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Object, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Object));
  Proc_LoadObject_descriptor_ = file->message_type(8);
  static const int Proc_LoadObject_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, refab_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, scale_),
  };
  Proc_LoadObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_LoadObject_descriptor_,
      Proc_LoadObject::default_instance_,
      Proc_LoadObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_LoadObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_LoadObject));
  Proc_Brush_descriptor_ = file->message_type(9);
  static const int Proc_Brush_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, texturename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, uv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, depth_),
  };
  Proc_Brush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Brush_descriptor_,
      Proc_Brush::default_instance_,
      Proc_Brush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Brush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Brush));
  Proc_Layer_descriptor_ = file->message_type(10);
  static const int Proc_Layer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Layer, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Layer, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Layer, objectlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Layer, brushlist_),
  };
  Proc_Layer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Layer_descriptor_,
      Proc_Layer::default_instance_,
      Proc_Layer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Layer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Layer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Layer));
  Proc_Scene_descriptor_ = file->message_type(11);
  static const int Proc_Scene_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Scene, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Scene, layerlist_),
  };
  Proc_Scene_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proc_Scene_descriptor_,
      Proc_Scene::default_instance_,
      Proc_Scene_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Scene, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proc_Scene, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proc_Scene));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_objectData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Vec2_descriptor_, &Proc_Vec2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Vec3_descriptor_, &Proc_Vec3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Vec4_descriptor_, &Proc_Vec4::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_SpotLight_descriptor_, &Proc_SpotLight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_ColiderBox_descriptor_, &Proc_ColiderBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Sprite_descriptor_, &Proc_Sprite::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_OwnSprite_descriptor_, &Proc_OwnSprite::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Object_descriptor_, &Proc_Object::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_LoadObject_descriptor_, &Proc_LoadObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Brush_descriptor_, &Proc_Brush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Layer_descriptor_, &Proc_Layer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proc_Scene_descriptor_, &Proc_Scene::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_objectData_2eproto() {
  delete Proc_Vec2::default_instance_;
  delete Proc_Vec2_reflection_;
  delete Proc_Vec3::default_instance_;
  delete Proc_Vec3_reflection_;
  delete Proc_Vec4::default_instance_;
  delete Proc_Vec4_reflection_;
  delete Proc_SpotLight::default_instance_;
  delete Proc_SpotLight_reflection_;
  delete Proc_ColiderBox::default_instance_;
  delete Proc_ColiderBox_reflection_;
  delete Proc_Sprite::default_instance_;
  delete Proc_Sprite_reflection_;
  delete Proc_OwnSprite::default_instance_;
  delete Proc_OwnSprite_reflection_;
  delete Proc_Object::default_instance_;
  delete Proc_Object_reflection_;
  delete Proc_LoadObject::default_instance_;
  delete Proc_LoadObject_reflection_;
  delete Proc_Brush::default_instance_;
  delete Proc_Brush_reflection_;
  delete Proc_Layer::default_instance_;
  delete Proc_Layer_reflection_;
  delete Proc_Scene::default_instance_;
  delete Proc_Scene_reflection_;
}

void protobuf_AddDesc_objectData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020objectData.proto\"+\n\tProc_Vec2\022\016\n\006value"
    "X\030\001 \002(\002\022\016\n\006valueY\030\002 \002(\002\";\n\tProc_Vec3\022\016\n\006"
    "valueX\030\001 \002(\002\022\016\n\006valueY\030\002 \002(\002\022\016\n\006valueZ\030\003"
    " \002(\002\"K\n\tProc_Vec4\022\016\n\006valueX\030\001 \002(\002\022\016\n\006val"
    "ueY\030\002 \002(\002\022\016\n\006valueZ\030\003 \002(\002\022\016\n\006valueW\030\004 \002("
    "\002\"d\n\016Proc_SpotLight\022\027\n\003pos\030\001 \002(\0132\n.Proc_"
    "Vec2\022\031\n\005color\030\002 \002(\0132\n.Proc_Vec4\022\036\n\natenu"
    "ation\030\003 \002(\0132\n.Proc_Vec3\"C\n\017Proc_ColiderB"
    "ox\022\027\n\003pos\030\001 \002(\0132\n.Proc_Vec2\022\027\n\003dim\030\002 \002(\013"
    "2\n.Proc_Vec2\"]\n\013Proc_Sprite\022\023\n\013texturePa"
    "th\030\001 \002(\t\022\027\n\003dim\030\002 \002(\0132\n.Proc_Vec2\022\014\n\004nam"
    "e\030\003 \002(\t\022\022\n\npacketName\030\004 \002(\t\"\254\001\n\016Proc_Own"
    "Sprite\022!\n\013Proc_Sprite\030\001 \002(\0132\014.Proc_Sprit"
    "e\022\035\n\toffsetPos\030\002 \002(\0132\n.Proc_Vec2\022\037\n\013offs"
    "etScale\030\003 \002(\0132\n.Proc_Vec2\022\031\n\005color\030\004 \002(\013"
    "2\n.Proc_Vec4\022\r\n\005depth\030\005 \002(\002\022\r\n\005angle\030\006 \001"
    "(\002\"\220\001\n\013Proc_Object\022\014\n\004name\030\001 \002(\t\022(\n\017Proc"
    "_SpriteList\030\002 \003(\0132\017.Proc_OwnSprite\022\"\n\tli"
    "ghtList\030\003 \003(\0132\017.Proc_SpotLight\022%\n\013colide"
    "rList\030\004 \003(\0132\020.Proc_ColiderBox\"\214\001\n\017Proc_L"
    "oadObject\022\033\n\005refab\030\001 \002(\0132\014.Proc_Object\022\027"
    "\n\003pos\030\002 \002(\0132\n.Proc_Vec2\022\031\n\005color\030\003 \002(\0132\n"
    ".Proc_Vec4\022\r\n\005angle\030\004 \002(\002\022\031\n\005scale\030\005 \002(\013"
    "2\n.Proc_Vec2\"z\n\nProc_Brush\022\023\n\013textureNam"
    "e\030\001 \002(\t\022\027\n\003pos\030\002 \002(\0132\n.Proc_Vec2\022\027\n\003dim\030"
    "\003 \002(\0132\n.Proc_Vec2\022\026\n\002uv\030\004 \002(\0132\n.Proc_Vec"
    "2\022\r\n\005depth\030\005 \002(\002\"o\n\nProc_Layer\022\014\n\004name\030\001"
    " \002(\t\022\r\n\005depth\030\002 \002(\005\022$\n\nobjectList\030\003 \003(\0132"
    "\020.Proc_LoadObject\022\036\n\tbrushList\030\004 \003(\0132\013.P"
    "roc_Brush\":\n\nProc_Scene\022\014\n\004name\030\001 \002(\t\022\036\n"
    "\tlayerList\030\002 \003(\0132\013.Proc_Layer", 1229);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "objectData.proto", &protobuf_RegisterTypes);
  Proc_Vec2::default_instance_ = new Proc_Vec2();
  Proc_Vec3::default_instance_ = new Proc_Vec3();
  Proc_Vec4::default_instance_ = new Proc_Vec4();
  Proc_SpotLight::default_instance_ = new Proc_SpotLight();
  Proc_ColiderBox::default_instance_ = new Proc_ColiderBox();
  Proc_Sprite::default_instance_ = new Proc_Sprite();
  Proc_OwnSprite::default_instance_ = new Proc_OwnSprite();
  Proc_Object::default_instance_ = new Proc_Object();
  Proc_LoadObject::default_instance_ = new Proc_LoadObject();
  Proc_Brush::default_instance_ = new Proc_Brush();
  Proc_Layer::default_instance_ = new Proc_Layer();
  Proc_Scene::default_instance_ = new Proc_Scene();
  Proc_Vec2::default_instance_->InitAsDefaultInstance();
  Proc_Vec3::default_instance_->InitAsDefaultInstance();
  Proc_Vec4::default_instance_->InitAsDefaultInstance();
  Proc_SpotLight::default_instance_->InitAsDefaultInstance();
  Proc_ColiderBox::default_instance_->InitAsDefaultInstance();
  Proc_Sprite::default_instance_->InitAsDefaultInstance();
  Proc_OwnSprite::default_instance_->InitAsDefaultInstance();
  Proc_Object::default_instance_->InitAsDefaultInstance();
  Proc_LoadObject::default_instance_->InitAsDefaultInstance();
  Proc_Brush::default_instance_->InitAsDefaultInstance();
  Proc_Layer::default_instance_->InitAsDefaultInstance();
  Proc_Scene::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_objectData_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_objectData_2eproto {
  StaticDescriptorInitializer_objectData_2eproto() {
    protobuf_AddDesc_objectData_2eproto();
  }
} static_descriptor_initializer_objectData_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Proc_Vec2::kValueXFieldNumber;
const int Proc_Vec2::kValueYFieldNumber;
#endif  // !_MSC_VER

Proc_Vec2::Proc_Vec2()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Vec2)
}

void Proc_Vec2::InitAsDefaultInstance() {
}

Proc_Vec2::Proc_Vec2(const Proc_Vec2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Vec2)
}

void Proc_Vec2::SharedCtor() {
  _cached_size_ = 0;
  valuex_ = 0;
  valuey_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Vec2::~Proc_Vec2() {
  // @@protoc_insertion_point(destructor:Proc_Vec2)
  SharedDtor();
}

void Proc_Vec2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proc_Vec2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Vec2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Vec2_descriptor_;
}

const Proc_Vec2& Proc_Vec2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Vec2* Proc_Vec2::default_instance_ = NULL;

Proc_Vec2* Proc_Vec2::New() const {
  return new Proc_Vec2;
}

void Proc_Vec2::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Proc_Vec2*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(valuex_, valuey_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Vec2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Vec2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float valueX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuex_)));
          set_has_valuex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_valueY;
        break;
      }

      // required float valueY = 2;
      case 2: {
        if (tag == 21) {
         parse_valueY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuey_)));
          set_has_valuey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Vec2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Vec2)
  return false;
#undef DO_
}

void Proc_Vec2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Vec2)
  // required float valueX = 1;
  if (has_valuex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->valuex(), output);
  }

  // required float valueY = 2;
  if (has_valuey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->valuey(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Vec2)
}

::google::protobuf::uint8* Proc_Vec2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Vec2)
  // required float valueX = 1;
  if (has_valuex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->valuex(), target);
  }

  // required float valueY = 2;
  if (has_valuey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->valuey(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Vec2)
  return target;
}

int Proc_Vec2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float valueX = 1;
    if (has_valuex()) {
      total_size += 1 + 4;
    }

    // required float valueY = 2;
    if (has_valuey()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Vec2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Vec2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Vec2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Vec2::MergeFrom(const Proc_Vec2& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valuex()) {
      set_valuex(from.valuex());
    }
    if (from.has_valuey()) {
      set_valuey(from.valuey());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Vec2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Vec2::CopyFrom(const Proc_Vec2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Vec2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Proc_Vec2::Swap(Proc_Vec2* other) {
  if (other != this) {
    std::swap(valuex_, other->valuex_);
    std::swap(valuey_, other->valuey_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Vec2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Vec2_descriptor_;
  metadata.reflection = Proc_Vec2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Vec3::kValueXFieldNumber;
const int Proc_Vec3::kValueYFieldNumber;
const int Proc_Vec3::kValueZFieldNumber;
#endif  // !_MSC_VER

Proc_Vec3::Proc_Vec3()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Vec3)
}

void Proc_Vec3::InitAsDefaultInstance() {
}

Proc_Vec3::Proc_Vec3(const Proc_Vec3& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Vec3)
}

void Proc_Vec3::SharedCtor() {
  _cached_size_ = 0;
  valuex_ = 0;
  valuey_ = 0;
  valuez_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Vec3::~Proc_Vec3() {
  // @@protoc_insertion_point(destructor:Proc_Vec3)
  SharedDtor();
}

void Proc_Vec3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proc_Vec3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Vec3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Vec3_descriptor_;
}

const Proc_Vec3& Proc_Vec3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Vec3* Proc_Vec3::default_instance_ = NULL;

Proc_Vec3* Proc_Vec3::New() const {
  return new Proc_Vec3;
}

void Proc_Vec3::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Proc_Vec3*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(valuex_, valuez_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Vec3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float valueX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuex_)));
          set_has_valuex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_valueY;
        break;
      }

      // required float valueY = 2;
      case 2: {
        if (tag == 21) {
         parse_valueY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuey_)));
          set_has_valuey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_valueZ;
        break;
      }

      // required float valueZ = 3;
      case 3: {
        if (tag == 29) {
         parse_valueZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuez_)));
          set_has_valuez();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Vec3)
  return false;
#undef DO_
}

void Proc_Vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Vec3)
  // required float valueX = 1;
  if (has_valuex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->valuex(), output);
  }

  // required float valueY = 2;
  if (has_valuey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->valuey(), output);
  }

  // required float valueZ = 3;
  if (has_valuez()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->valuez(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Vec3)
}

::google::protobuf::uint8* Proc_Vec3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Vec3)
  // required float valueX = 1;
  if (has_valuex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->valuex(), target);
  }

  // required float valueY = 2;
  if (has_valuey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->valuey(), target);
  }

  // required float valueZ = 3;
  if (has_valuez()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->valuez(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Vec3)
  return target;
}

int Proc_Vec3::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float valueX = 1;
    if (has_valuex()) {
      total_size += 1 + 4;
    }

    // required float valueY = 2;
    if (has_valuey()) {
      total_size += 1 + 4;
    }

    // required float valueZ = 3;
    if (has_valuez()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Vec3::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Vec3* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Vec3*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Vec3::MergeFrom(const Proc_Vec3& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valuex()) {
      set_valuex(from.valuex());
    }
    if (from.has_valuey()) {
      set_valuey(from.valuey());
    }
    if (from.has_valuez()) {
      set_valuez(from.valuez());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Vec3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Vec3::CopyFrom(const Proc_Vec3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Vec3::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Proc_Vec3::Swap(Proc_Vec3* other) {
  if (other != this) {
    std::swap(valuex_, other->valuex_);
    std::swap(valuey_, other->valuey_);
    std::swap(valuez_, other->valuez_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Vec3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Vec3_descriptor_;
  metadata.reflection = Proc_Vec3_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Vec4::kValueXFieldNumber;
const int Proc_Vec4::kValueYFieldNumber;
const int Proc_Vec4::kValueZFieldNumber;
const int Proc_Vec4::kValueWFieldNumber;
#endif  // !_MSC_VER

Proc_Vec4::Proc_Vec4()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Vec4)
}

void Proc_Vec4::InitAsDefaultInstance() {
}

Proc_Vec4::Proc_Vec4(const Proc_Vec4& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Vec4)
}

void Proc_Vec4::SharedCtor() {
  _cached_size_ = 0;
  valuex_ = 0;
  valuey_ = 0;
  valuez_ = 0;
  valuew_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Vec4::~Proc_Vec4() {
  // @@protoc_insertion_point(destructor:Proc_Vec4)
  SharedDtor();
}

void Proc_Vec4::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proc_Vec4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Vec4::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Vec4_descriptor_;
}

const Proc_Vec4& Proc_Vec4::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Vec4* Proc_Vec4::default_instance_ = NULL;

Proc_Vec4* Proc_Vec4::New() const {
  return new Proc_Vec4;
}

void Proc_Vec4::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Proc_Vec4*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(valuex_, valuew_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Vec4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Vec4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float valueX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuex_)));
          set_has_valuex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_valueY;
        break;
      }

      // required float valueY = 2;
      case 2: {
        if (tag == 21) {
         parse_valueY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuey_)));
          set_has_valuey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_valueZ;
        break;
      }

      // required float valueZ = 3;
      case 3: {
        if (tag == 29) {
         parse_valueZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuez_)));
          set_has_valuez();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_valueW;
        break;
      }

      // required float valueW = 4;
      case 4: {
        if (tag == 37) {
         parse_valueW:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuew_)));
          set_has_valuew();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Vec4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Vec4)
  return false;
#undef DO_
}

void Proc_Vec4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Vec4)
  // required float valueX = 1;
  if (has_valuex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->valuex(), output);
  }

  // required float valueY = 2;
  if (has_valuey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->valuey(), output);
  }

  // required float valueZ = 3;
  if (has_valuez()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->valuez(), output);
  }

  // required float valueW = 4;
  if (has_valuew()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->valuew(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Vec4)
}

::google::protobuf::uint8* Proc_Vec4::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Vec4)
  // required float valueX = 1;
  if (has_valuex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->valuex(), target);
  }

  // required float valueY = 2;
  if (has_valuey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->valuey(), target);
  }

  // required float valueZ = 3;
  if (has_valuez()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->valuez(), target);
  }

  // required float valueW = 4;
  if (has_valuew()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->valuew(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Vec4)
  return target;
}

int Proc_Vec4::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float valueX = 1;
    if (has_valuex()) {
      total_size += 1 + 4;
    }

    // required float valueY = 2;
    if (has_valuey()) {
      total_size += 1 + 4;
    }

    // required float valueZ = 3;
    if (has_valuez()) {
      total_size += 1 + 4;
    }

    // required float valueW = 4;
    if (has_valuew()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Vec4::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Vec4* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Vec4*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Vec4::MergeFrom(const Proc_Vec4& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valuex()) {
      set_valuex(from.valuex());
    }
    if (from.has_valuey()) {
      set_valuey(from.valuey());
    }
    if (from.has_valuez()) {
      set_valuez(from.valuez());
    }
    if (from.has_valuew()) {
      set_valuew(from.valuew());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Vec4::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Vec4::CopyFrom(const Proc_Vec4& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Vec4::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Proc_Vec4::Swap(Proc_Vec4* other) {
  if (other != this) {
    std::swap(valuex_, other->valuex_);
    std::swap(valuey_, other->valuey_);
    std::swap(valuez_, other->valuez_);
    std::swap(valuew_, other->valuew_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Vec4::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Vec4_descriptor_;
  metadata.reflection = Proc_Vec4_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_SpotLight::kPosFieldNumber;
const int Proc_SpotLight::kColorFieldNumber;
const int Proc_SpotLight::kAtenuationFieldNumber;
#endif  // !_MSC_VER

Proc_SpotLight::Proc_SpotLight()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_SpotLight)
}

void Proc_SpotLight::InitAsDefaultInstance() {
  pos_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  color_ = const_cast< ::Proc_Vec4*>(&::Proc_Vec4::default_instance());
  atenuation_ = const_cast< ::Proc_Vec3*>(&::Proc_Vec3::default_instance());
}

Proc_SpotLight::Proc_SpotLight(const Proc_SpotLight& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_SpotLight)
}

void Proc_SpotLight::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  color_ = NULL;
  atenuation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_SpotLight::~Proc_SpotLight() {
  // @@protoc_insertion_point(destructor:Proc_SpotLight)
  SharedDtor();
}

void Proc_SpotLight::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
    delete color_;
    delete atenuation_;
  }
}

void Proc_SpotLight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_SpotLight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_SpotLight_descriptor_;
}

const Proc_SpotLight& Proc_SpotLight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_SpotLight* Proc_SpotLight::default_instance_ = NULL;

Proc_SpotLight* Proc_SpotLight::New() const {
  return new Proc_SpotLight;
}

void Proc_SpotLight::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::Proc_Vec2::Clear();
    }
    if (has_color()) {
      if (color_ != NULL) color_->::Proc_Vec4::Clear();
    }
    if (has_atenuation()) {
      if (atenuation_ != NULL) atenuation_->::Proc_Vec3::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_SpotLight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_SpotLight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Proc_Vec2 pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_color;
        break;
      }

      // required .Proc_Vec4 color = 2;
      case 2: {
        if (tag == 18) {
         parse_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_atenuation;
        break;
      }

      // required .Proc_Vec3 atenuation = 3;
      case 3: {
        if (tag == 26) {
         parse_atenuation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_atenuation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_SpotLight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_SpotLight)
  return false;
#undef DO_
}

void Proc_SpotLight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_SpotLight)
  // required .Proc_Vec2 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // required .Proc_Vec4 color = 2;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->color(), output);
  }

  // required .Proc_Vec3 atenuation = 3;
  if (has_atenuation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->atenuation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_SpotLight)
}

::google::protobuf::uint8* Proc_SpotLight::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_SpotLight)
  // required .Proc_Vec2 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // required .Proc_Vec4 color = 2;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->color(), target);
  }

  // required .Proc_Vec3 atenuation = 3;
  if (has_atenuation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->atenuation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_SpotLight)
  return target;
}

int Proc_SpotLight::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Proc_Vec2 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // required .Proc_Vec4 color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->color());
    }

    // required .Proc_Vec3 atenuation = 3;
    if (has_atenuation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->atenuation());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_SpotLight::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_SpotLight* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_SpotLight*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_SpotLight::MergeFrom(const Proc_SpotLight& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::Proc_Vec2::MergeFrom(from.pos());
    }
    if (from.has_color()) {
      mutable_color()->::Proc_Vec4::MergeFrom(from.color());
    }
    if (from.has_atenuation()) {
      mutable_atenuation()->::Proc_Vec3::MergeFrom(from.atenuation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_SpotLight::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_SpotLight::CopyFrom(const Proc_SpotLight& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_SpotLight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_pos()) {
    if (!this->pos().IsInitialized()) return false;
  }
  if (has_color()) {
    if (!this->color().IsInitialized()) return false;
  }
  if (has_atenuation()) {
    if (!this->atenuation().IsInitialized()) return false;
  }
  return true;
}

void Proc_SpotLight::Swap(Proc_SpotLight* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(color_, other->color_);
    std::swap(atenuation_, other->atenuation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_SpotLight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_SpotLight_descriptor_;
  metadata.reflection = Proc_SpotLight_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_ColiderBox::kPosFieldNumber;
const int Proc_ColiderBox::kDimFieldNumber;
#endif  // !_MSC_VER

Proc_ColiderBox::Proc_ColiderBox()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_ColiderBox)
}

void Proc_ColiderBox::InitAsDefaultInstance() {
  pos_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  dim_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
}

Proc_ColiderBox::Proc_ColiderBox(const Proc_ColiderBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_ColiderBox)
}

void Proc_ColiderBox::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dim_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_ColiderBox::~Proc_ColiderBox() {
  // @@protoc_insertion_point(destructor:Proc_ColiderBox)
  SharedDtor();
}

void Proc_ColiderBox::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
    delete dim_;
  }
}

void Proc_ColiderBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_ColiderBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_ColiderBox_descriptor_;
}

const Proc_ColiderBox& Proc_ColiderBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_ColiderBox* Proc_ColiderBox::default_instance_ = NULL;

Proc_ColiderBox* Proc_ColiderBox::New() const {
  return new Proc_ColiderBox;
}

void Proc_ColiderBox::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::Proc_Vec2::Clear();
    }
    if (has_dim()) {
      if (dim_ != NULL) dim_->::Proc_Vec2::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_ColiderBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_ColiderBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Proc_Vec2 pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dim;
        break;
      }

      // required .Proc_Vec2 dim = 2;
      case 2: {
        if (tag == 18) {
         parse_dim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_ColiderBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_ColiderBox)
  return false;
#undef DO_
}

void Proc_ColiderBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_ColiderBox)
  // required .Proc_Vec2 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pos(), output);
  }

  // required .Proc_Vec2 dim = 2;
  if (has_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dim(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_ColiderBox)
}

::google::protobuf::uint8* Proc_ColiderBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_ColiderBox)
  // required .Proc_Vec2 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pos(), target);
  }

  // required .Proc_Vec2 dim = 2;
  if (has_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dim(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_ColiderBox)
  return target;
}

int Proc_ColiderBox::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Proc_Vec2 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // required .Proc_Vec2 dim = 2;
    if (has_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dim());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_ColiderBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_ColiderBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_ColiderBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_ColiderBox::MergeFrom(const Proc_ColiderBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::Proc_Vec2::MergeFrom(from.pos());
    }
    if (from.has_dim()) {
      mutable_dim()->::Proc_Vec2::MergeFrom(from.dim());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_ColiderBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_ColiderBox::CopyFrom(const Proc_ColiderBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_ColiderBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_pos()) {
    if (!this->pos().IsInitialized()) return false;
  }
  if (has_dim()) {
    if (!this->dim().IsInitialized()) return false;
  }
  return true;
}

void Proc_ColiderBox::Swap(Proc_ColiderBox* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(dim_, other->dim_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_ColiderBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_ColiderBox_descriptor_;
  metadata.reflection = Proc_ColiderBox_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Sprite::kTexturePathFieldNumber;
const int Proc_Sprite::kDimFieldNumber;
const int Proc_Sprite::kNameFieldNumber;
const int Proc_Sprite::kPacketNameFieldNumber;
#endif  // !_MSC_VER

Proc_Sprite::Proc_Sprite()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Sprite)
}

void Proc_Sprite::InitAsDefaultInstance() {
  dim_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
}

Proc_Sprite::Proc_Sprite(const Proc_Sprite& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Sprite)
}

void Proc_Sprite::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  texturepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dim_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Sprite::~Proc_Sprite() {
  // @@protoc_insertion_point(destructor:Proc_Sprite)
  SharedDtor();
}

void Proc_Sprite::SharedDtor() {
  if (texturepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete texturepath_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (packetname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packetname_;
  }
  if (this != default_instance_) {
    delete dim_;
  }
}

void Proc_Sprite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Sprite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Sprite_descriptor_;
}

const Proc_Sprite& Proc_Sprite::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Sprite* Proc_Sprite::default_instance_ = NULL;

Proc_Sprite* Proc_Sprite::New() const {
  return new Proc_Sprite;
}

void Proc_Sprite::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_texturepath()) {
      if (texturepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        texturepath_->clear();
      }
    }
    if (has_dim()) {
      if (dim_ != NULL) dim_->::Proc_Vec2::Clear();
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_packetname()) {
      if (packetname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packetname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Sprite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Sprite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string texturePath = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_texturepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->texturepath().data(), this->texturepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "texturepath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dim;
        break;
      }

      // required .Proc_Vec2 dim = 2;
      case 2: {
        if (tag == 18) {
         parse_dim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_packetName;
        break;
      }

      // required string packetName = 4;
      case 4: {
        if (tag == 34) {
         parse_packetName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packetname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->packetname().data(), this->packetname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packetname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Sprite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Sprite)
  return false;
#undef DO_
}

void Proc_Sprite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Sprite)
  // required string texturePath = 1;
  if (has_texturepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->texturepath().data(), this->texturepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "texturepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->texturepath(), output);
  }

  // required .Proc_Vec2 dim = 2;
  if (has_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dim(), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // required string packetName = 4;
  if (has_packetname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packetname().data(), this->packetname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packetname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->packetname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Sprite)
}

::google::protobuf::uint8* Proc_Sprite::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Sprite)
  // required string texturePath = 1;
  if (has_texturepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->texturepath().data(), this->texturepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "texturepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->texturepath(), target);
  }

  // required .Proc_Vec2 dim = 2;
  if (has_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dim(), target);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required string packetName = 4;
  if (has_packetname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packetname().data(), this->packetname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packetname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->packetname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Sprite)
  return target;
}

int Proc_Sprite::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string texturePath = 1;
    if (has_texturepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->texturepath());
    }

    // required .Proc_Vec2 dim = 2;
    if (has_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dim());
    }

    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string packetName = 4;
    if (has_packetname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packetname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Sprite::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Sprite* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Sprite*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Sprite::MergeFrom(const Proc_Sprite& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_texturepath()) {
      set_texturepath(from.texturepath());
    }
    if (from.has_dim()) {
      mutable_dim()->::Proc_Vec2::MergeFrom(from.dim());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_packetname()) {
      set_packetname(from.packetname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Sprite::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Sprite::CopyFrom(const Proc_Sprite& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Sprite::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_dim()) {
    if (!this->dim().IsInitialized()) return false;
  }
  return true;
}

void Proc_Sprite::Swap(Proc_Sprite* other) {
  if (other != this) {
    std::swap(texturepath_, other->texturepath_);
    std::swap(dim_, other->dim_);
    std::swap(name_, other->name_);
    std::swap(packetname_, other->packetname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Sprite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Sprite_descriptor_;
  metadata.reflection = Proc_Sprite_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_OwnSprite::kProcSpriteFieldNumber;
const int Proc_OwnSprite::kOffsetPosFieldNumber;
const int Proc_OwnSprite::kOffsetScaleFieldNumber;
const int Proc_OwnSprite::kColorFieldNumber;
const int Proc_OwnSprite::kDepthFieldNumber;
const int Proc_OwnSprite::kAngleFieldNumber;
#endif  // !_MSC_VER

Proc_OwnSprite::Proc_OwnSprite()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_OwnSprite)
}

void Proc_OwnSprite::InitAsDefaultInstance() {
  proc_sprite_ = const_cast< ::Proc_Sprite*>(&::Proc_Sprite::default_instance());
  offsetpos_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  offsetscale_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  color_ = const_cast< ::Proc_Vec4*>(&::Proc_Vec4::default_instance());
}

Proc_OwnSprite::Proc_OwnSprite(const Proc_OwnSprite& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_OwnSprite)
}

void Proc_OwnSprite::SharedCtor() {
  _cached_size_ = 0;
  proc_sprite_ = NULL;
  offsetpos_ = NULL;
  offsetscale_ = NULL;
  color_ = NULL;
  depth_ = 0;
  angle_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_OwnSprite::~Proc_OwnSprite() {
  // @@protoc_insertion_point(destructor:Proc_OwnSprite)
  SharedDtor();
}

void Proc_OwnSprite::SharedDtor() {
  if (this != default_instance_) {
    delete proc_sprite_;
    delete offsetpos_;
    delete offsetscale_;
    delete color_;
  }
}

void Proc_OwnSprite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_OwnSprite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_OwnSprite_descriptor_;
}

const Proc_OwnSprite& Proc_OwnSprite::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_OwnSprite* Proc_OwnSprite::default_instance_ = NULL;

Proc_OwnSprite* Proc_OwnSprite::New() const {
  return new Proc_OwnSprite;
}

void Proc_OwnSprite::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Proc_OwnSprite*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(depth_, angle_);
    if (has_proc_sprite()) {
      if (proc_sprite_ != NULL) proc_sprite_->::Proc_Sprite::Clear();
    }
    if (has_offsetpos()) {
      if (offsetpos_ != NULL) offsetpos_->::Proc_Vec2::Clear();
    }
    if (has_offsetscale()) {
      if (offsetscale_ != NULL) offsetscale_->::Proc_Vec2::Clear();
    }
    if (has_color()) {
      if (color_ != NULL) color_->::Proc_Vec4::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_OwnSprite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_OwnSprite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Proc_Sprite Proc_Sprite = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proc_sprite()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_offsetPos;
        break;
      }

      // required .Proc_Vec2 offsetPos = 2;
      case 2: {
        if (tag == 18) {
         parse_offsetPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offsetpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_offsetScale;
        break;
      }

      // required .Proc_Vec2 offsetScale = 3;
      case 3: {
        if (tag == 26) {
         parse_offsetScale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offsetscale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_color;
        break;
      }

      // required .Proc_Vec4 color = 4;
      case 4: {
        if (tag == 34) {
         parse_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_depth;
        break;
      }

      // required float depth = 5;
      case 5: {
        if (tag == 45) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
          set_has_depth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_angle;
        break;
      }

      // optional float angle = 6;
      case 6: {
        if (tag == 53) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_OwnSprite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_OwnSprite)
  return false;
#undef DO_
}

void Proc_OwnSprite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_OwnSprite)
  // required .Proc_Sprite Proc_Sprite = 1;
  if (has_proc_sprite()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->proc_sprite(), output);
  }

  // required .Proc_Vec2 offsetPos = 2;
  if (has_offsetpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->offsetpos(), output);
  }

  // required .Proc_Vec2 offsetScale = 3;
  if (has_offsetscale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->offsetscale(), output);
  }

  // required .Proc_Vec4 color = 4;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->color(), output);
  }

  // required float depth = 5;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->depth(), output);
  }

  // optional float angle = 6;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->angle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_OwnSprite)
}

::google::protobuf::uint8* Proc_OwnSprite::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_OwnSprite)
  // required .Proc_Sprite Proc_Sprite = 1;
  if (has_proc_sprite()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->proc_sprite(), target);
  }

  // required .Proc_Vec2 offsetPos = 2;
  if (has_offsetpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->offsetpos(), target);
  }

  // required .Proc_Vec2 offsetScale = 3;
  if (has_offsetscale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->offsetscale(), target);
  }

  // required .Proc_Vec4 color = 4;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->color(), target);
  }

  // required float depth = 5;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->depth(), target);
  }

  // optional float angle = 6;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->angle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_OwnSprite)
  return target;
}

int Proc_OwnSprite::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Proc_Sprite Proc_Sprite = 1;
    if (has_proc_sprite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->proc_sprite());
    }

    // required .Proc_Vec2 offsetPos = 2;
    if (has_offsetpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->offsetpos());
    }

    // required .Proc_Vec2 offsetScale = 3;
    if (has_offsetscale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->offsetscale());
    }

    // required .Proc_Vec4 color = 4;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->color());
    }

    // required float depth = 5;
    if (has_depth()) {
      total_size += 1 + 4;
    }

    // optional float angle = 6;
    if (has_angle()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_OwnSprite::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_OwnSprite* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_OwnSprite*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_OwnSprite::MergeFrom(const Proc_OwnSprite& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_proc_sprite()) {
      mutable_proc_sprite()->::Proc_Sprite::MergeFrom(from.proc_sprite());
    }
    if (from.has_offsetpos()) {
      mutable_offsetpos()->::Proc_Vec2::MergeFrom(from.offsetpos());
    }
    if (from.has_offsetscale()) {
      mutable_offsetscale()->::Proc_Vec2::MergeFrom(from.offsetscale());
    }
    if (from.has_color()) {
      mutable_color()->::Proc_Vec4::MergeFrom(from.color());
    }
    if (from.has_depth()) {
      set_depth(from.depth());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_OwnSprite::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_OwnSprite::CopyFrom(const Proc_OwnSprite& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_OwnSprite::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_proc_sprite()) {
    if (!this->proc_sprite().IsInitialized()) return false;
  }
  if (has_offsetpos()) {
    if (!this->offsetpos().IsInitialized()) return false;
  }
  if (has_offsetscale()) {
    if (!this->offsetscale().IsInitialized()) return false;
  }
  if (has_color()) {
    if (!this->color().IsInitialized()) return false;
  }
  return true;
}

void Proc_OwnSprite::Swap(Proc_OwnSprite* other) {
  if (other != this) {
    std::swap(proc_sprite_, other->proc_sprite_);
    std::swap(offsetpos_, other->offsetpos_);
    std::swap(offsetscale_, other->offsetscale_);
    std::swap(color_, other->color_);
    std::swap(depth_, other->depth_);
    std::swap(angle_, other->angle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_OwnSprite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_OwnSprite_descriptor_;
  metadata.reflection = Proc_OwnSprite_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Object::kNameFieldNumber;
const int Proc_Object::kProcSpriteListFieldNumber;
const int Proc_Object::kLightListFieldNumber;
const int Proc_Object::kColiderListFieldNumber;
#endif  // !_MSC_VER

Proc_Object::Proc_Object()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Object)
}

void Proc_Object::InitAsDefaultInstance() {
}

Proc_Object::Proc_Object(const Proc_Object& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Object)
}

void Proc_Object::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Object::~Proc_Object() {
  // @@protoc_insertion_point(destructor:Proc_Object)
  SharedDtor();
}

void Proc_Object::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proc_Object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Object::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Object_descriptor_;
}

const Proc_Object& Proc_Object::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Object* Proc_Object::default_instance_ = NULL;

Proc_Object* Proc_Object::New() const {
  return new Proc_Object;
}

void Proc_Object::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  proc_spritelist_.Clear();
  lightlist_.Clear();
  coliderlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Object)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Proc_SpriteList;
        break;
      }

      // repeated .Proc_OwnSprite Proc_SpriteList = 2;
      case 2: {
        if (tag == 18) {
         parse_Proc_SpriteList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_proc_spritelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Proc_SpriteList;
        if (input->ExpectTag(26)) goto parse_lightList;
        break;
      }

      // repeated .Proc_SpotLight lightList = 3;
      case 3: {
        if (tag == 26) {
         parse_lightList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lightlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_lightList;
        if (input->ExpectTag(34)) goto parse_coliderList;
        break;
      }

      // repeated .Proc_ColiderBox coliderList = 4;
      case 4: {
        if (tag == 34) {
         parse_coliderList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_coliderlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_coliderList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Object)
  return false;
#undef DO_
}

void Proc_Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Object)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Proc_OwnSprite Proc_SpriteList = 2;
  for (int i = 0; i < this->proc_spritelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->proc_spritelist(i), output);
  }

  // repeated .Proc_SpotLight lightList = 3;
  for (int i = 0; i < this->lightlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lightlist(i), output);
  }

  // repeated .Proc_ColiderBox coliderList = 4;
  for (int i = 0; i < this->coliderlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->coliderlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Object)
}

::google::protobuf::uint8* Proc_Object::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Object)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Proc_OwnSprite Proc_SpriteList = 2;
  for (int i = 0; i < this->proc_spritelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->proc_spritelist(i), target);
  }

  // repeated .Proc_SpotLight lightList = 3;
  for (int i = 0; i < this->lightlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->lightlist(i), target);
  }

  // repeated .Proc_ColiderBox coliderList = 4;
  for (int i = 0; i < this->coliderlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->coliderlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Object)
  return target;
}

int Proc_Object::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .Proc_OwnSprite Proc_SpriteList = 2;
  total_size += 1 * this->proc_spritelist_size();
  for (int i = 0; i < this->proc_spritelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->proc_spritelist(i));
  }

  // repeated .Proc_SpotLight lightList = 3;
  total_size += 1 * this->lightlist_size();
  for (int i = 0; i < this->lightlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lightlist(i));
  }

  // repeated .Proc_ColiderBox coliderList = 4;
  total_size += 1 * this->coliderlist_size();
  for (int i = 0; i < this->coliderlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->coliderlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Object::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Object* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Object*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Object::MergeFrom(const Proc_Object& from) {
  GOOGLE_CHECK_NE(&from, this);
  proc_spritelist_.MergeFrom(from.proc_spritelist_);
  lightlist_.MergeFrom(from.lightlist_);
  coliderlist_.MergeFrom(from.coliderlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Object::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Object::CopyFrom(const Proc_Object& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Object::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->proc_spritelist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lightlist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->coliderlist())) return false;
  return true;
}

void Proc_Object::Swap(Proc_Object* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    proc_spritelist_.Swap(&other->proc_spritelist_);
    lightlist_.Swap(&other->lightlist_);
    coliderlist_.Swap(&other->coliderlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Object::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Object_descriptor_;
  metadata.reflection = Proc_Object_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_LoadObject::kRefabFieldNumber;
const int Proc_LoadObject::kPosFieldNumber;
const int Proc_LoadObject::kColorFieldNumber;
const int Proc_LoadObject::kAngleFieldNumber;
const int Proc_LoadObject::kScaleFieldNumber;
#endif  // !_MSC_VER

Proc_LoadObject::Proc_LoadObject()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_LoadObject)
}

void Proc_LoadObject::InitAsDefaultInstance() {
  refab_ = const_cast< ::Proc_Object*>(&::Proc_Object::default_instance());
  pos_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  color_ = const_cast< ::Proc_Vec4*>(&::Proc_Vec4::default_instance());
  scale_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
}

Proc_LoadObject::Proc_LoadObject(const Proc_LoadObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_LoadObject)
}

void Proc_LoadObject::SharedCtor() {
  _cached_size_ = 0;
  refab_ = NULL;
  pos_ = NULL;
  color_ = NULL;
  angle_ = 0;
  scale_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_LoadObject::~Proc_LoadObject() {
  // @@protoc_insertion_point(destructor:Proc_LoadObject)
  SharedDtor();
}

void Proc_LoadObject::SharedDtor() {
  if (this != default_instance_) {
    delete refab_;
    delete pos_;
    delete color_;
    delete scale_;
  }
}

void Proc_LoadObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_LoadObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_LoadObject_descriptor_;
}

const Proc_LoadObject& Proc_LoadObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_LoadObject* Proc_LoadObject::default_instance_ = NULL;

Proc_LoadObject* Proc_LoadObject::New() const {
  return new Proc_LoadObject;
}

void Proc_LoadObject::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_refab()) {
      if (refab_ != NULL) refab_->::Proc_Object::Clear();
    }
    if (has_pos()) {
      if (pos_ != NULL) pos_->::Proc_Vec2::Clear();
    }
    if (has_color()) {
      if (color_ != NULL) color_->::Proc_Vec4::Clear();
    }
    angle_ = 0;
    if (has_scale()) {
      if (scale_ != NULL) scale_->::Proc_Vec2::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_LoadObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_LoadObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Proc_Object refab = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_refab()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pos;
        break;
      }

      // required .Proc_Vec2 pos = 2;
      case 2: {
        if (tag == 18) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_color;
        break;
      }

      // required .Proc_Vec4 color = 3;
      case 3: {
        if (tag == 26) {
         parse_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_angle;
        break;
      }

      // required float angle = 4;
      case 4: {
        if (tag == 37) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_scale;
        break;
      }

      // required .Proc_Vec2 scale = 5;
      case 5: {
        if (tag == 42) {
         parse_scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_LoadObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_LoadObject)
  return false;
#undef DO_
}

void Proc_LoadObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_LoadObject)
  // required .Proc_Object refab = 1;
  if (has_refab()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->refab(), output);
  }

  // required .Proc_Vec2 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pos(), output);
  }

  // required .Proc_Vec4 color = 3;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->color(), output);
  }

  // required float angle = 4;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->angle(), output);
  }

  // required .Proc_Vec2 scale = 5;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->scale(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_LoadObject)
}

::google::protobuf::uint8* Proc_LoadObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_LoadObject)
  // required .Proc_Object refab = 1;
  if (has_refab()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->refab(), target);
  }

  // required .Proc_Vec2 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pos(), target);
  }

  // required .Proc_Vec4 color = 3;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->color(), target);
  }

  // required float angle = 4;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->angle(), target);
  }

  // required .Proc_Vec2 scale = 5;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->scale(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_LoadObject)
  return target;
}

int Proc_LoadObject::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Proc_Object refab = 1;
    if (has_refab()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->refab());
    }

    // required .Proc_Vec2 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // required .Proc_Vec4 color = 3;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->color());
    }

    // required float angle = 4;
    if (has_angle()) {
      total_size += 1 + 4;
    }

    // required .Proc_Vec2 scale = 5;
    if (has_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scale());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_LoadObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_LoadObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_LoadObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_LoadObject::MergeFrom(const Proc_LoadObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refab()) {
      mutable_refab()->::Proc_Object::MergeFrom(from.refab());
    }
    if (from.has_pos()) {
      mutable_pos()->::Proc_Vec2::MergeFrom(from.pos());
    }
    if (from.has_color()) {
      mutable_color()->::Proc_Vec4::MergeFrom(from.color());
    }
    if (from.has_angle()) {
      set_angle(from.angle());
    }
    if (from.has_scale()) {
      mutable_scale()->::Proc_Vec2::MergeFrom(from.scale());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_LoadObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_LoadObject::CopyFrom(const Proc_LoadObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_LoadObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_refab()) {
    if (!this->refab().IsInitialized()) return false;
  }
  if (has_pos()) {
    if (!this->pos().IsInitialized()) return false;
  }
  if (has_color()) {
    if (!this->color().IsInitialized()) return false;
  }
  if (has_scale()) {
    if (!this->scale().IsInitialized()) return false;
  }
  return true;
}

void Proc_LoadObject::Swap(Proc_LoadObject* other) {
  if (other != this) {
    std::swap(refab_, other->refab_);
    std::swap(pos_, other->pos_);
    std::swap(color_, other->color_);
    std::swap(angle_, other->angle_);
    std::swap(scale_, other->scale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_LoadObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_LoadObject_descriptor_;
  metadata.reflection = Proc_LoadObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Brush::kTextureNameFieldNumber;
const int Proc_Brush::kPosFieldNumber;
const int Proc_Brush::kDimFieldNumber;
const int Proc_Brush::kUvFieldNumber;
const int Proc_Brush::kDepthFieldNumber;
#endif  // !_MSC_VER

Proc_Brush::Proc_Brush()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Brush)
}

void Proc_Brush::InitAsDefaultInstance() {
  pos_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  dim_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
  uv_ = const_cast< ::Proc_Vec2*>(&::Proc_Vec2::default_instance());
}

Proc_Brush::Proc_Brush(const Proc_Brush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Brush)
}

void Proc_Brush::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  texturename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = NULL;
  dim_ = NULL;
  uv_ = NULL;
  depth_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Brush::~Proc_Brush() {
  // @@protoc_insertion_point(destructor:Proc_Brush)
  SharedDtor();
}

void Proc_Brush::SharedDtor() {
  if (texturename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete texturename_;
  }
  if (this != default_instance_) {
    delete pos_;
    delete dim_;
    delete uv_;
  }
}

void Proc_Brush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Brush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Brush_descriptor_;
}

const Proc_Brush& Proc_Brush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Brush* Proc_Brush::default_instance_ = NULL;

Proc_Brush* Proc_Brush::New() const {
  return new Proc_Brush;
}

void Proc_Brush::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_texturename()) {
      if (texturename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        texturename_->clear();
      }
    }
    if (has_pos()) {
      if (pos_ != NULL) pos_->::Proc_Vec2::Clear();
    }
    if (has_dim()) {
      if (dim_ != NULL) dim_->::Proc_Vec2::Clear();
    }
    if (has_uv()) {
      if (uv_ != NULL) uv_->::Proc_Vec2::Clear();
    }
    depth_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Brush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Brush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string textureName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_texturename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->texturename().data(), this->texturename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "texturename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pos;
        break;
      }

      // required .Proc_Vec2 pos = 2;
      case 2: {
        if (tag == 18) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dim;
        break;
      }

      // required .Proc_Vec2 dim = 3;
      case 3: {
        if (tag == 26) {
         parse_dim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uv;
        break;
      }

      // required .Proc_Vec2 uv = 4;
      case 4: {
        if (tag == 34) {
         parse_uv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_depth;
        break;
      }

      // required float depth = 5;
      case 5: {
        if (tag == 45) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &depth_)));
          set_has_depth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Brush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Brush)
  return false;
#undef DO_
}

void Proc_Brush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Brush)
  // required string textureName = 1;
  if (has_texturename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->texturename().data(), this->texturename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "texturename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->texturename(), output);
  }

  // required .Proc_Vec2 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pos(), output);
  }

  // required .Proc_Vec2 dim = 3;
  if (has_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dim(), output);
  }

  // required .Proc_Vec2 uv = 4;
  if (has_uv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uv(), output);
  }

  // required float depth = 5;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->depth(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Brush)
}

::google::protobuf::uint8* Proc_Brush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Brush)
  // required string textureName = 1;
  if (has_texturename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->texturename().data(), this->texturename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "texturename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->texturename(), target);
  }

  // required .Proc_Vec2 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->pos(), target);
  }

  // required .Proc_Vec2 dim = 3;
  if (has_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dim(), target);
  }

  // required .Proc_Vec2 uv = 4;
  if (has_uv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->uv(), target);
  }

  // required float depth = 5;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->depth(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Brush)
  return target;
}

int Proc_Brush::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string textureName = 1;
    if (has_texturename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->texturename());
    }

    // required .Proc_Vec2 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pos());
    }

    // required .Proc_Vec2 dim = 3;
    if (has_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dim());
    }

    // required .Proc_Vec2 uv = 4;
    if (has_uv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uv());
    }

    // required float depth = 5;
    if (has_depth()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Brush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Brush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Brush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Brush::MergeFrom(const Proc_Brush& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_texturename()) {
      set_texturename(from.texturename());
    }
    if (from.has_pos()) {
      mutable_pos()->::Proc_Vec2::MergeFrom(from.pos());
    }
    if (from.has_dim()) {
      mutable_dim()->::Proc_Vec2::MergeFrom(from.dim());
    }
    if (from.has_uv()) {
      mutable_uv()->::Proc_Vec2::MergeFrom(from.uv());
    }
    if (from.has_depth()) {
      set_depth(from.depth());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Brush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Brush::CopyFrom(const Proc_Brush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Brush::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_pos()) {
    if (!this->pos().IsInitialized()) return false;
  }
  if (has_dim()) {
    if (!this->dim().IsInitialized()) return false;
  }
  if (has_uv()) {
    if (!this->uv().IsInitialized()) return false;
  }
  return true;
}

void Proc_Brush::Swap(Proc_Brush* other) {
  if (other != this) {
    std::swap(texturename_, other->texturename_);
    std::swap(pos_, other->pos_);
    std::swap(dim_, other->dim_);
    std::swap(uv_, other->uv_);
    std::swap(depth_, other->depth_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Brush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Brush_descriptor_;
  metadata.reflection = Proc_Brush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Layer::kNameFieldNumber;
const int Proc_Layer::kDepthFieldNumber;
const int Proc_Layer::kObjectListFieldNumber;
const int Proc_Layer::kBrushListFieldNumber;
#endif  // !_MSC_VER

Proc_Layer::Proc_Layer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Layer)
}

void Proc_Layer::InitAsDefaultInstance() {
}

Proc_Layer::Proc_Layer(const Proc_Layer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Layer)
}

void Proc_Layer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depth_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Layer::~Proc_Layer() {
  // @@protoc_insertion_point(destructor:Proc_Layer)
  SharedDtor();
}

void Proc_Layer::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proc_Layer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Layer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Layer_descriptor_;
}

const Proc_Layer& Proc_Layer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Layer* Proc_Layer::default_instance_ = NULL;

Proc_Layer* Proc_Layer::New() const {
  return new Proc_Layer;
}

void Proc_Layer::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    depth_ = 0;
  }
  objectlist_.Clear();
  brushlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Layer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_depth;
        break;
      }

      // required int32 depth = 2;
      case 2: {
        if (tag == 16) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depth_)));
          set_has_depth();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_objectList;
        break;
      }

      // repeated .Proc_LoadObject objectList = 3;
      case 3: {
        if (tag == 26) {
         parse_objectList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objectlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_objectList;
        if (input->ExpectTag(34)) goto parse_brushList;
        break;
      }

      // repeated .Proc_Brush brushList = 4;
      case 4: {
        if (tag == 34) {
         parse_brushList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_brushlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_brushList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Layer)
  return false;
#undef DO_
}

void Proc_Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Layer)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 depth = 2;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->depth(), output);
  }

  // repeated .Proc_LoadObject objectList = 3;
  for (int i = 0; i < this->objectlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->objectlist(i), output);
  }

  // repeated .Proc_Brush brushList = 4;
  for (int i = 0; i < this->brushlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->brushlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Layer)
}

::google::protobuf::uint8* Proc_Layer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Layer)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 depth = 2;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->depth(), target);
  }

  // repeated .Proc_LoadObject objectList = 3;
  for (int i = 0; i < this->objectlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->objectlist(i), target);
  }

  // repeated .Proc_Brush brushList = 4;
  for (int i = 0; i < this->brushlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->brushlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Layer)
  return target;
}

int Proc_Layer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 depth = 2;
    if (has_depth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->depth());
    }

  }
  // repeated .Proc_LoadObject objectList = 3;
  total_size += 1 * this->objectlist_size();
  for (int i = 0; i < this->objectlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objectlist(i));
  }

  // repeated .Proc_Brush brushList = 4;
  total_size += 1 * this->brushlist_size();
  for (int i = 0; i < this->brushlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->brushlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Layer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Layer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Layer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Layer::MergeFrom(const Proc_Layer& from) {
  GOOGLE_CHECK_NE(&from, this);
  objectlist_.MergeFrom(from.objectlist_);
  brushlist_.MergeFrom(from.brushlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_depth()) {
      set_depth(from.depth());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Layer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Layer::CopyFrom(const Proc_Layer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Layer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->objectlist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->brushlist())) return false;
  return true;
}

void Proc_Layer::Swap(Proc_Layer* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(depth_, other->depth_);
    objectlist_.Swap(&other->objectlist_);
    brushlist_.Swap(&other->brushlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Layer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Layer_descriptor_;
  metadata.reflection = Proc_Layer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proc_Scene::kNameFieldNumber;
const int Proc_Scene::kLayerListFieldNumber;
#endif  // !_MSC_VER

Proc_Scene::Proc_Scene()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proc_Scene)
}

void Proc_Scene::InitAsDefaultInstance() {
}

Proc_Scene::Proc_Scene(const Proc_Scene& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proc_Scene)
}

void Proc_Scene::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proc_Scene::~Proc_Scene() {
  // @@protoc_insertion_point(destructor:Proc_Scene)
  SharedDtor();
}

void Proc_Scene::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proc_Scene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proc_Scene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proc_Scene_descriptor_;
}

const Proc_Scene& Proc_Scene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_objectData_2eproto();
  return *default_instance_;
}

Proc_Scene* Proc_Scene::default_instance_ = NULL;

Proc_Scene* Proc_Scene::New() const {
  return new Proc_Scene;
}

void Proc_Scene::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  layerlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proc_Scene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proc_Scene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_layerList;
        break;
      }

      // repeated .Proc_Layer layerList = 2;
      case 2: {
        if (tag == 18) {
         parse_layerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_layerlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_layerList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proc_Scene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proc_Scene)
  return false;
#undef DO_
}

void Proc_Scene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proc_Scene)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Proc_Layer layerList = 2;
  for (int i = 0; i < this->layerlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->layerlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proc_Scene)
}

::google::protobuf::uint8* Proc_Scene::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proc_Scene)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Proc_Layer layerList = 2;
  for (int i = 0; i < this->layerlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->layerlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proc_Scene)
  return target;
}

int Proc_Scene::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .Proc_Layer layerList = 2;
  total_size += 1 * this->layerlist_size();
  for (int i = 0; i < this->layerlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->layerlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proc_Scene::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proc_Scene* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proc_Scene*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proc_Scene::MergeFrom(const Proc_Scene& from) {
  GOOGLE_CHECK_NE(&from, this);
  layerlist_.MergeFrom(from.layerlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proc_Scene::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proc_Scene::CopyFrom(const Proc_Scene& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proc_Scene::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->layerlist())) return false;
  return true;
}

void Proc_Scene::Swap(Proc_Scene* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    layerlist_.Swap(&other->layerlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proc_Scene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proc_Scene_descriptor_;
  metadata.reflection = Proc_Scene_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
